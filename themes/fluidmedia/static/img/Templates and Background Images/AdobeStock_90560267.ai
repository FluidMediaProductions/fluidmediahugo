%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.0.2%%For: (BEA) ()%%Title: (geo2.eps)%%CreationDate: 03.09.15 16:07%%Canvassize: 16383%%BoundingBox: 0 7 838 1191%%HiResBoundingBox: 0 7.61621 837.9805 1190.9956%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 420.5 599.5 420.5 599.5%AI3_TileBox: 135 191.5 705 1008.5%AI3_DocumentPreview: Header%AI5_ArtSize: 840 1200%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -825.3052 1305.251 0.3333 1053 590 18 1 0 63 135 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-99.5 257.6133%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Nachzeichnen) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe H\237llen-Zusatzmodul) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe-Zusatzmodul Interaktiv malen) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Angleichungen-Zusatzmodul) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Spezialpinsel-Zusatzmodul) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Spezialpinsel-Zusatzmodul) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(FILTERiT4 Trail  ver4.2 for Intel Mac AICS5) (FILTERiT4 Live Trail ver4.2 for Intel Mac AICS5) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Tiling  ver4.2 for Intel Mac AICS5) (FILTERiT4 Live Tiling ver4.2 for Intel Mac AICS5) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 DropShadow  ver4.2 for Intel Mac AICS5) (FILTERiT4 Live Shadow ver4.2 for Intel Mac AICS5) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Reflections  ver4.2 for Intel Mac AICS5) (FILTERiT4 Live Reflections ver4.2 for Intel Mac AICS5) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Neon  ver4.2 for Intel Mac AICS5) (FILTERiT4 Live Neon ver4.2 for Intel Mac AICS5) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Generation  ver4.2 for Intel Mac AICS5) (FILTERiT4 Live Generation ver4.2 for Intel Mac AICS5) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Galaxy  ver4.2 for Intel Mac AICS5) (FILTERiT4 Live Galaxy ver4.2 for Intel Mac AICS5) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Frame  ver4.2 for Intel Mac AICS5) (FILTERiT4 Live Frame ver4.2 for Intel Mac AICS5) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Explosion  ver4.2 for Intel Mac AICS5) (FILTERiT4 Live Explosion ver4.2 for Intel Mac AICS5) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Emboss  ver4.2 for Intel Mac AICS5) (FILTERiT4 Live Emboss ver4.2 for Intel Mac AICS5) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Cutout  ver4.2 for Intel Mac AICS5) (FILTERiT4 Live Cutout ver4.2 for Intel Mac AICS5) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Circle  ver4.2 for Intel Mac AICS5) (FILTERiT4 Live Circle ver4.2 for Intel Mac AICS5) (FILTERiT4.aip)%AI8_PluginGroupInfo(FILTERiT4 Border  ver4.2 for Intel Mac AICS5) (FILTERiT4 Live Border ver4.2 for Intel Mac AICS5) (FILTERiT4.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Musterpinsel-Zusatzmodul) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Musterpinsel-Zusatzmodul) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Bildpinsel-Zusatzmodul) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Bildpinsel-Zusatzmodul) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Kalligrafiepinsel-Zusatzmodul) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Zusammengesetzte Form) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.860075 0.849699 0.789548 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(Wei\647)Pc0.769772 0.753292 0.622705 0.81326 0.101961 0.090196 0.105882 Xa(Schwarz)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(Ebene 2 Kopie) Ln0 Au0 O0.051423 0.01529 0.13489 0 0.960784 0.960784 0.894118 Xa0 J 0 j 1 w 10 M []0 d0 XR735.002 1008.0986 m682.502 977.7866 L735.002 947.4761 L735.002 1008.0986 Lf0.296208 0 0.116426 0 0.741176 0.921569 0.913725 Xa577.502 917.166 m630.002 886.854 L577.502 856.5435 L577.502 917.166 Lf0.307591 0 0.483772 0 0.756863 0.941176 0.627451 Xa577.502 856.543 m630.002 826.231 L577.502 795.9204 L577.502 856.543 Lf0.156985 0 0.482979 0 0.898039 0.933333 0.615686 Xa682.502 886.8545 m735.002 856.5425 L682.502 826.2319 L682.502 886.8545 Lf0.163973 0 0.674861 0 0.901961 0.913725 0.419608 Xa577.502 795.9219 m630.002 765.6099 L577.502 735.2993 L577.502 795.9219 Lf0.054261 0.005219 0.161013 0 0.960784 0.964706 0.878431 Xa577.502 735.2988 m630.002 704.9868 L577.502 674.6763 L577.502 735.2988 Lf0.180941 0.021729 0.26334 0 0.862745 0.905882 0.788235 Xa735.002 523.1143 m682.502 553.4248 L735.002 583.7354 L735.002 523.1143 Lf0.359594 0.021607 0.264988 0 0.698039 0.843137 0.776471 Xa682.502 553.4248 m735.002 523.1143 L682.502 492.8037 L682.502 553.4248 Lf0.477119 0.12784 0.307347 0 0.576471 0.737255 0.701961 Xa735.002 462.4912 m682.502 492.8037 L735.002 523.1143 L735.002 462.4912 Lf0.261204 0.130251 0.267735 0 0.788235 0.815686 0.74902 Xa682.502 492.8037 m735.002 462.4912 L682.502 432.1807 L682.502 492.8037 Lf735.002 583.7354 m787.502 553.4229 L735.002 523.1123 L735.002 583.7354 Lf0.342443 0.183658 0.309361 0 0.713726 0.752941 0.694118 Xa735.002 401.8701 m682.502 432.1807 L735.002 462.4912 L735.002 401.8701 Lf0.1691 0.079896 0.221927 0 0.866667 0.878431 0.803922 Xa682.502 432.1807 m735.002 401.8701 L682.502 371.5596 L682.502 432.1807 Lf0.197757 0.111727 0.246128 0 0.839216 0.847059 0.772549 Xa682.502 371.5596 m735.002 341.2471 L682.502 310.9365 L682.502 371.5596 Lf0.246494 0.140963 0.291386 0 0.8 0.811765 0.729412 Xa682.502 310.9365 m735.002 280.626 L682.502 250.3154 L682.502 310.9365 Lf0.156985 0 0.482979 0 0.898039 0.933333 0.615686 Xa735.5996 250.3057 m788.0996 219.9951 L735.5996 189.6846 L735.5996 250.3057 Lf0.094514 0.031128 0.171817 0 0.929412 0.937255 0.862745 Xa630.002 644.3662 m682.502 614.0547 L630.002 583.7354 L630.002 644.3662 Lf0.156985 0 0.482979 0 0.898039 0.933333 0.615686 Xa682.502 614.0547 m735.002 583.7354 L682.502 553.4238 L682.502 614.0547 Lf0.076448 0.03473 0.15494 0 0.941176 0.941176 0.87451 Xa682.502 553.4248 m630.002 583.7373 L682.502 614.0547 L682.502 553.4248 Lf0.24921 0 0.592584 0 0.819608 0.882353 0.509804 Xa630.002 583.7354 m682.502 553.4248 L630.002 523.1143 L630.002 583.7354 Lf0.487556 0.274144 0.780148 0.035035 0.580392 0.611765 0.313726 Xa682.502 492.8037 m630.002 523.1143 L682.502 553.4248 L682.502 492.8037 Lf0.728481 0.452949 0.452369 0.141665 0.298039 0.435294 0.45098 Xa630.002 523.1143 m682.502 492.8037 L630.002 462.4912 L630.002 523.1143 Lf0.828824 0.623102 0.474189 0.380163 0.164706 0.262745 0.313726 Xa682.502 432.1807 m630.002 462.4932 L682.502 492.8037 L682.502 432.1807 Lf0.824948 0.63183 0.485969 0.409644 0.164706 0.25098 0.298039 Xa630.002 462.4912 m682.502 432.1807 L630.002 401.8701 L630.002 462.4912 Lf0.393347 0.260533 0.371283 0 0.670588 0.690196 0.627451 Xa682.502 371.5596 m630.002 401.8701 L682.502 432.1807 L682.502 371.5596 Lf0.128817 0.046418 0.197726 0 0.901961 0.913725 0.835294 Xa630.002 401.8701 m682.502 371.5596 L630.002 341.2471 L630.002 401.8701 Lf0.132784 0.051026 0.195102 0 0.898039 0.909804 0.835294 Xa682.502 310.9365 m630.002 341.249 L682.502 371.5596 L682.502 310.9365 Lf0.174502 0.083101 0.231601 0 0.862745 0.87451 0.796078 Xa630.002 341.2471 m682.502 310.9365 L630.002 280.626 L630.002 341.2471 Lf0.062684 0.008545 0.136843 0 0.952941 0.960784 0.894118 Xa630.002 583.7354 m577.502 614.0537 L630.002 644.3662 L630.002 583.7354 Lf682.502 614.0537 m630.002 644.3652 L682.502 674.6777 L682.502 614.0537 Lf837.9805 644.3623 m785.4805 674.6821 L837.9805 704.9946 L837.9805 644.3623 Lf0.042695 0.00238 0.119173 0 0.968627 0.972549 0.909804 Xa735.002 583.7354 m682.502 614.0537 L735.002 644.3662 L735.002 583.7354 Lf0.061585 0.015381 0.139376 0 0.952941 0.956863 0.890196 Xa577.502 614.0547 m630.002 583.7354 L577.502 553.4248 L577.502 614.0547 Lf0.042695 0.00238 0.119173 0 0.968627 0.972549 0.909804 Xa630.002 523.1143 m577.502 553.4248 L630.002 583.7354 L630.002 523.1143 Lf0.126406 0.045441 0.165774 0 0.901961 0.917647 0.858824 Xa577.502 553.4248 m630.002 523.1143 L577.502 492.8037 L577.502 553.4248 Lf0.261357 0.052247 0.259342 0 0.788235 0.858824 0.776471 Xa630.002 462.4912 m577.502 492.8037 L630.002 523.1143 L630.002 462.4912 Lf0.844663 0.631556 0.509178 0.457282 0.133333 0.235294 0.27451 Xa577.502 492.8037 m630.002 462.4912 L577.502 432.1807 L577.502 492.8037 Lf0.678553 0.493263 0.500267 0.206821 0.341176 0.4 0.396078 Xa630.002 401.8701 m577.502 432.1807 L630.002 462.4912 L630.002 401.8701 Lf0.269688 0.150576 0.278325 0 0.780392 0.8 0.733333 Xa577.502 432.1807 m630.002 401.8701 L577.502 371.5596 L577.502 432.1807 Lf0.109102 0.040528 0.181613 0 0.917647 0.92549 0.85098 Xa630.002 280.626 m577.502 310.9365 L630.002 341.2471 L630.002 280.626 Lf0.152529 0.064973 0.214939 0 0.882353 0.894118 0.815686 Xa577.502 310.9365 m630.002 280.626 L577.502 250.3154 L577.502 310.9365 Lf0.164462 0.083192 0.221408 0 0.870588 0.878431 0.803922 Xa630.002 220.0029 m577.502 250.3154 L630.002 280.626 L630.002 220.0029 Lf0.369085 0.222202 0.35877 0 0.690196 0.717647 0.647059 Xa525.002 1008.0986 m577.502 977.7871 L525.002 947.4756 L525.002 1008.0986 Lf0.496315 0.126101 0.289189 0 0.556863 0.733333 0.713726 Xa577.502 856.543 m525.002 886.8545 L577.502 917.165 L577.502 856.543 Lf0.193851 0 0.353552 0 0.858824 0.964706 0.737255 Xa262.5005 886.854 m210.0005 917.1655 L262.5005 947.4761 L262.5005 886.854 Lf0.66717 0.115419 0.325933 0 0.337255 0.67451 0.678431 Xa525.002 886.8545 m577.502 856.543 L525.002 826.2314 L525.002 886.8545 Lf0.73431 0 0.729915 0 0.243137 0.67451 0.4 Xa577.502 795.9209 m525.002 826.2314 L577.502 856.543 L577.502 795.9209 Lf0.623743 0.111025 0.476081 0 0.419608 0.682353 0.576471 Xa525.002 826.2314 m577.502 795.9209 L525.002 765.6104 L525.002 826.2314 Lf0.443976 0.108003 0.470253 0 0.623529 0.74902 0.592157 Xa577.502 735.2988 m525.002 765.6104 L577.502 795.9209 L577.502 735.2988 Lf0.172976 0.04184 0.246494 0 0.866667 0.898039 0.796078 Xa525.002 765.6104 m577.502 735.2988 L525.002 704.9873 L525.002 765.6104 Lf0.174411 0 0.706538 0 0.890196 0.894118 0.392157 Xa577.502 674.6768 m525.002 704.9873 L577.502 735.2988 L577.502 674.6768 Lf0.088746 0.013336 0.291966 0 0.941176 0.941176 0.780392 Xa525.002 704.9873 m577.502 674.6768 L525.002 644.3662 L525.002 704.9873 Lf0.080659 0.007141 0.249027 0 0.945098 0.94902 0.811765 Xa577.502 614.0547 m525.002 644.3662 L577.502 674.6768 L577.502 614.0547 Lf0.051148 0.015808 0.129213 0 0.960784 0.960784 0.898039 Xa525.002 644.3662 m577.502 614.0547 L525.002 583.7354 L525.002 644.3662 Lf0.062684 0.008545 0.136843 0 0.952941 0.960784 0.894118 Xa577.502 553.4248 m525.002 583.7373 L577.502 614.0547 L577.502 553.4248 Lf0.124788 0 0.189212 0 0.905882 0.960784 0.858824 Xa525.002 583.7354 m577.502 553.4248 L525.002 523.1143 L525.002 583.7354 Lf0.230869 0 0.28455 0 0.815686 0.960784 0.796078 Xa577.502 492.8037 m525.002 523.1143 L577.502 553.4248 L577.502 492.8037 Lf0.159457 0 0.21442 0 0.878431 0.960784 0.843137 Xa525.002 523.1143 m577.502 492.8037 L525.002 462.4912 L525.002 523.1143 Lf0.331548 0 0.349615 0 0.721569 0.901961 0.733333 Xa577.502 432.1807 m525.002 462.4932 L577.502 492.8037 L577.502 432.1807 Lf0.434211 0 0.424536 0 0.623529 0.843137 0.662745 Xa525.002 462.4912 m577.502 432.1807 L525.002 401.8701 L525.002 462.4912 Lf0.293706 0 0.316258 0 0.760784 0.905882 0.756863 Xa577.502 371.5596 m525.002 401.8701 L577.502 432.1807 L577.502 371.5596 Lf0.094514 0.031128 0.171817 0 0.929412 0.937255 0.862745 Xa525.002 401.8701 m577.502 371.5596 L525.002 341.2471 L525.002 401.8701 Lf0.094881 0.029908 0.17731 0 0.929412 0.937255 0.858824 Xa577.502 310.9365 m525.002 341.249 L577.502 371.5596 L577.502 310.9365 Lf0.076448 0.03473 0.15494 0 0.941176 0.941176 0.87451 Xa525.002 341.2471 m577.502 310.9365 L525.002 280.626 L525.002 341.2471 Lf524 68.2373 m576.5 37.9268 L524 7.61621 L524 68.2373 Lf0.08835 0.035157 0.165377 0 0.933333 0.937255 0.866667 Xa577.502 250.3154 m525.002 280.626 L577.502 310.9365 L577.502 250.3154 Lf0.133425 0.049989 0.201144 0 0.898039 0.909804 0.831373 Xa525.002 280.626 m577.502 250.3154 L525.002 220.0029 L525.002 280.626 Lf0.188907 0.057649 0.249607 0 0.85098 0.882353 0.788235 Xa577.502 189.6924 m525.002 220.0049 L577.502 250.3154 L577.502 189.6924 Lf0.182834 0.090669 0.237766 0 0.854902 0.866667 0.788235 Xa525.002 220.0029 m577.502 189.6924 L525.002 159.3818 L525.002 220.0029 Lf0.730159 0.51342 0.560357 0.319921 0.262745 0.341176 0.32549 Xa472.502 1038.4092 m525.002 1008.0986 L472.502 977.7871 L472.502 1038.4092 Lf0.452735 0.239963 0.390753 0 0.615686 0.682353 0.615686 Xa525.002 947.4756 m472.502 977.7871 L525.002 1008.0986 L525.002 947.4756 Lf0.191409 0.090791 0.241093 0 0.847059 0.862745 0.784314 Xa472.502 977.7871 m525.002 947.4756 L472.502 917.165 L472.502 977.7871 Lf0.291844 0.134401 0.263066 0 0.760784 0.803922 0.74902 Xa525.002 886.8545 m472.502 917.165 L525.002 947.4756 L525.002 886.8545 Lf0.826902 0.41529 0.34168 0.057984 0.133333 0.466667 0.54902 Xa472.502 917.165 m525.002 886.8545 L472.502 856.543 L472.502 917.165 Lf0.921263 0.652277 0.283879 0.129824 0.031373 0.317647 0.470588 Xa525.002 826.2314 m472.502 856.543 L525.002 886.8545 L525.002 826.2314 Lf0.816953 0.218235 0.674403 0.038666 0.117647 0.545098 0.4 Xa472.502 856.543 m525.002 826.2314 L472.502 795.9209 L472.502 856.543 Lf0.642817 0 0.827024 0 0.403922 0.717647 0.313726 Xa525.002 765.6104 m472.502 795.9209 L525.002 826.2314 L525.002 765.6104 Lf0.26508 0 0.671351 0 0.811765 0.87451 0.427451 Xa472.502 795.9209 m525.002 765.6104 L472.502 735.2988 L472.502 795.9209 Lf0.162203 0 0.727779 0 0.905882 0.909804 0.360784 Xa525.002 704.9873 m472.502 735.2988 L525.002 765.6104 L525.002 704.9873 Lf0.16788 0 0.762112 0 0.901961 0.905882 0.317647 Xa472.502 735.2988 m525.002 704.9873 L472.502 674.6768 L472.502 735.2988 Lf0.186404 0 0.786343 0 0.882353 0.886275 0.294118 Xa525.002 644.3662 m472.502 674.6768 L525.002 704.9873 L525.002 644.3662 Lf0.175265 0 0.697902 0 0.890196 0.898039 0.4 Xa472.502 674.6768 m525.002 644.3662 L472.502 614.0547 L472.502 674.6768 Lf0.054261 0.005219 0.161013 0 0.960784 0.964706 0.878431 Xa525.002 583.7354 m472.502 614.0537 L525.002 644.3662 L525.002 583.7354 Lf0.093751 0 0.159426 0 0.929412 0.956863 0.878431 Xa472.502 614.0547 m525.002 583.7354 L472.502 553.4248 L472.502 614.0547 Lf0.43061 0 0.450965 0 0.607843 0.901961 0.658824 Xa525.002 523.1143 m472.502 553.4248 L525.002 583.7354 L525.002 523.1143 Lf0.384436 0 0.417212 0 0.658824 0.929412 0.694118 Xa472.502 553.4248 m525.002 523.1143 L472.502 492.8037 L472.502 553.4248 Lf0.365393 0 0.397467 0 0.678431 0.941176 0.713726 Xa525.002 462.4912 m472.502 492.8037 L525.002 523.1143 L525.002 462.4912 Lf0.351843 0 0.38349 0 0.694118 0.937255 0.721569 Xa472.502 492.8037 m525.002 462.4912 L472.502 432.1807 L472.502 492.8037 Lf0.520134 0 0.519066 0 0.494118 0.882353 0.607843 Xa525.002 401.8701 m472.502 432.1807 L525.002 462.4912 L525.002 401.8701 Lf0.648615 0 0.633814 0 0.360784 0.74902 0.486275 Xa472.502 432.1807 m525.002 401.8701 L472.502 371.5596 L472.502 432.1807 Lf0.445655 0 0.596551 0 0.623529 0.85098 0.517647 Xa525.002 341.2471 m472.502 371.5596 L525.002 401.8701 L525.002 341.2471 Lf0.271153 0 0.50164 0 0.796078 0.890196 0.596078 Xa472.502 371.5596 m525.002 341.2471 L472.502 310.9365 L472.502 371.5596 Lf0.401404 0 0.811398 0 0.690196 0.835294 0.294118 Xa525.002 280.626 m472.502 310.9365 L525.002 341.2471 L525.002 280.626 Lf0.121187 0.029847 0.237125 0 0.913725 0.92549 0.811765 Xa472.502 310.9365 m525.002 280.626 L472.502 250.3154 L472.502 310.9365 Lf0.768704 0.545891 0.762417 0.610193 0.14902 0.215686 0.156863 Xa525.002 220.0029 m472.502 250.3154 L525.002 280.626 L525.002 220.0029 Lf0.754147 0.553094 0.574365 0.404181 0.223529 0.294118 0.286275 Xa472.502 250.3154 m525.002 220.0029 L472.502 189.6924 L472.502 250.3154 Lf0.751278 0.543999 0.566674 0.380499 0.231373 0.305882 0.298039 Xa525.002 159.3818 m472.502 189.6924 L525.002 220.0029 L525.002 159.3818 Lf0.438666 0.221592 0.377203 0 0.627451 0.698039 0.631373 Xa472.502 977.7871 m420.0015 1008.0986 L472.502 1038.4092 L472.502 977.7871 Lf0.634363 0.339116 0.459358 0.044007 0.415686 0.54902 0.513726 Xa420.0015 1008.0986 m472.502 977.7871 L420.0015 947.4756 L420.0015 1008.0986 Lf0.703243 0.383307 0.465522 0.088746 0.333333 0.494118 0.482353 Xa472.502 917.165 m420.0015 947.4756 L472.502 977.7871 L472.502 917.165 Lf0.437201 0.183108 0.321569 0 0.623529 0.721569 0.678431 Xa420.0015 947.4756 m472.502 917.165 L420.0015 886.8545 L420.0015 947.4756 Lf0.411078 0.155306 0.275242 0 0.647059 0.74902 0.721569 Xa472.502 856.543 m420.0015 886.8545 L472.502 917.165 L472.502 856.543 Lf0.803525 0.325353 0.416571 0.040345 0.152941 0.517647 0.541176 Xa420.0015 886.8545 m472.502 856.543 L420.0015 826.2314 L420.0015 886.8545 Lf0.750668 0.006806 0.517174 0 0.152941 0.67451 0.560784 Xa472.502 795.9209 m420.0015 826.2314 L472.502 856.543 L472.502 795.9209 Lf0.813718 0.155489 0.786343 0.013764 0.117647 0.572549 0.337255 Xa420.0015 826.2314 m472.502 795.9209 L420.0015 765.6104 L420.0015 826.2314 Lf0.45182 0 0.537133 0 0.615686 0.815686 0.564706 Xa472.502 735.2988 m420.0015 765.6104 L472.502 795.9209 L472.502 735.2988 Lf0.148409 0 0.583703 0 0.909804 0.92549 0.517647 Xa420.0015 765.6104 m472.502 735.2988 L420.0015 704.9873 L420.0015 765.6104 Lf0.094484 0 0.384497 0 0.945098 0.960784 0.701961 Xa472.502 674.6768 m420.0015 704.9873 L472.502 735.2988 L472.502 674.6768 Lf0.163973 0 0.674861 0 0.901961 0.913725 0.419608 Xa420.0015 704.9873 m472.502 674.6768 L420.0015 644.3662 L420.0015 704.9873 Lf0.524285 0.319005 0.643793 0.053376 0.533333 0.576471 0.4 Xa472.502 614.0547 m420.0015 644.3662 L472.502 674.6768 L472.502 614.0547 Lf0.485939 0.350988 0.433204 0.019043 0.576471 0.596078 0.545098 Xa420.0015 644.3662 m472.502 614.0547 L420.0015 583.7354 L420.0015 644.3662 Lf0.230869 0 0.28455 0 0.815686 0.960784 0.796078 Xa472.502 553.4248 m420.0015 583.7373 L472.502 614.0547 L472.502 553.4248 Lf0.466712 0 0.468605 0 0.588235 0.835294 0.627451 Xa420.0015 583.7354 m472.502 553.4248 L420.0015 523.1143 L420.0015 583.7354 Lf0.454841 0 0.479377 0 0.588235 0.882353 0.631373 Xa472.502 492.8037 m420.0015 523.1143 L472.502 553.4248 L472.502 492.8037 Lf0.387304 0 0.417761 0 0.654902 0.929412 0.694118 Xa420.0015 523.1143 m472.502 492.8037 L420.0015 462.4912 L420.0015 523.1143 Lf0.363806 0 0.380011 0 0.682353 0.92549 0.721569 Xa472.502 432.1807 m420.0015 462.4932 L472.502 492.8037 L472.502 432.1807 Lf0.314977 0 0.340978 0 0.733333 0.929412 0.74902 Xa420.0015 462.4912 m472.502 432.1807 L420.0015 401.8701 L420.0015 462.4912 Lf0.199832 0 0.343969 0 0.85098 0.937255 0.737255 Xa472.502 371.5596 m420.0015 401.8701 L472.502 432.1807 L472.502 371.5596 Lf0.471809 0 0.797848 0 0.607843 0.854902 0.321569 Xa420.0015 401.8701 m472.502 371.5596 L420.0015 341.2471 L420.0015 401.8701 Lf0.365393 0 0.858732 0 0.729412 0.843137 0.223529 Xa472.502 310.9365 m420.0015 341.249 L472.502 371.5596 L472.502 310.9365 Lf0.40531 0 0.90222 0 0.690196 0.815686 0.176471 Xa420.0015 341.2471 m472.502 310.9365 L420.0015 280.626 L420.0015 341.2471 Lf0.391302 0.013703 0.86154 0 0.698039 0.788235 0.25098 Xa472.502 250.3154 m420.0015 280.626 L472.502 310.9365 L472.502 250.3154 Lf0.672389 0.354528 0.746548 0.153384 0.360784 0.478431 0.305882 Xa420.0015 280.626 m472.502 250.3154 L420.0015 220.0029 L420.0015 280.626 Lf0.633753 0.26334 0.518395 0.023682 0.419608 0.592157 0.501961 Xa472.502 189.6924 m420.0015 220.0049 L472.502 250.3154 L472.502 189.6924 Lf0.534417 0.349828 0.451789 0.031617 0.52549 0.576471 0.52549 Xa420.0015 220.0029 m472.502 189.6924 L420.0015 159.3818 L420.0015 220.0029 Lf0.262638 0.077516 0.252934 0 0.784314 0.843137 0.772549 Xa367.5005 1038.4092 m420.0015 1008.0986 L367.5005 977.7871 L367.5005 1038.4092 Lf415.9995 1129.1587 m468.5 1098.8481 L415.9995 1068.5366 L415.9995 1129.1587 Lf0.773251 0.415106 0.215763 0.007965 0.235294 0.501961 0.639216 Xa420.0015 947.4756 m367.5005 977.7871 L420.0015 1008.0986 L420.0015 947.4756 Lf0.598993 0.25272 0.368078 0.002502 0.454902 0.627451 0.615686 Xa367.5005 977.7871 m420.0015 947.4756 L367.5005 917.165 L367.5005 977.7871 Lf0.337713 0.115328 0.253208 0 0.717647 0.8 0.756863 Xa420.0015 886.8545 m367.5005 917.165 L420.0015 947.4756 L420.0015 886.8545 Lf0.199344 0.081514 0.209751 0 0.839216 0.866667 0.807843 Xa367.5005 917.165 m420.0015 886.8545 L367.5005 856.543 L367.5005 917.165 Lf0.082338 0.031952 0.1561 0 0.937255 0.941176 0.87451 Xa420.0015 826.2314 m367.5005 856.543 L420.0015 886.8545 L420.0015 826.2314 Lf365.499 1130.3726 m312.999 1160.6841 L365.499 1190.9956 L365.499 1130.3726 Lf0.311101 0 0.281254 0 0.741176 0.882353 0.776471 Xa367.5005 856.543 m420.0015 826.2314 L367.5005 795.9209 L367.5005 856.543 Lf0.499367 0 0.567163 0 0.533333 0.886275 0.564706 Xa420.0015 765.6104 m367.5005 795.9209 L420.0015 826.2314 L420.0015 765.6104 Lf0.307591 0 0.483772 0 0.756863 0.941176 0.627451 Xa367.5005 795.9209 m420.0015 765.6104 L367.5005 735.2988 L367.5005 795.9209 Lf0.193851 0 0.353552 0 0.858824 0.964706 0.737255 Xa420.0015 704.9873 m367.5005 735.2988 L420.0015 765.6104 L420.0015 704.9873 Lf0.161593 0 0.329656 0 0.886275 0.945098 0.74902 Xa367.5005 735.2988 m420.0015 704.9873 L367.5005 674.6768 L367.5005 735.2988 Lf0.433509 0.221897 0.336095 0 0.631373 0.701961 0.658824 Xa420.0015 644.3662 m367.5005 674.6768 L420.0015 704.9873 L420.0015 644.3662 Lf0.359655 0.162539 0.307683 0 0.698039 0.760784 0.701961 Xa367.5005 674.6768 m420.0015 644.3662 L367.5005 614.0547 L367.5005 674.6768 Lf0.546532 0.310552 0.362371 0.006683 0.517647 0.611765 0.603922 Xa420.0015 583.7354 m367.5005 614.0537 L420.0015 644.3662 L420.0015 583.7354 Lf0.83566 0.667689 0.517632 0.524285 0.137255 0.203922 0.243137 Xa367.5005 614.0547 m420.0015 583.7354 L367.5005 553.4248 L367.5005 614.0547 Lf0.860075 0.762173 0.585077 0.816983 0.054902 0.078431 0.105882 Xa420.0015 523.1143 m367.5005 553.4248 L420.0015 583.7354 L420.0015 523.1143 Lf0.370336 0.107546 0.356939 0 0.690196 0.784314 0.682353 Xa367.5005 553.4248 m420.0015 523.1143 L367.5005 492.8037 L367.5005 553.4248 Lf0.782284 0.30341 0.149691 0 0.133333 0.556863 0.713726 Xa420.0015 462.4912 m367.5005 492.8037 L420.0015 523.1143 L420.0015 462.4912 Lf0.463539 0 0.232944 0 0.576471 0.831373 0.803922 Xa367.5005 492.8037 m420.0015 462.4912 L367.5005 432.1807 L367.5005 492.8037 Lf0.296208 0 0.116426 0 0.741176 0.921569 0.913725 Xa420.0015 401.8701 m367.5005 432.1807 L420.0015 462.4912 L420.0015 401.8701 Lf0.087648 0 0.131746 0 0.933333 0.968627 0.901961 Xa367.5005 432.1807 m420.0015 401.8701 L367.5005 371.5596 L367.5005 432.1807 Lf0.156985 0 0.482979 0 0.898039 0.933333 0.615686 Xa420.0015 341.2471 m367.5005 371.5596 L420.0015 401.8701 L420.0015 341.2471 Lf0.201755 0 0.752224 0 0.870588 0.890196 0.337255 Xa367.5005 371.5596 m420.0015 341.2471 L367.5005 310.9365 L367.5005 371.5596 Lf0.185 0 0.733669 0 0.882353 0.890196 0.356863 Xa420.0015 280.626 m367.5005 310.9365 L420.0015 341.2471 L420.0015 280.626 Lf0.254765 0 0.703792 0 0.819608 0.866667 0.4 Xa367.5005 310.9365 m420.0015 280.626 L367.5005 250.3154 L367.5005 310.9365 Lf0.196841 0 0.235599 0 0.847059 0.929412 0.819608 Xa420.0015 220.0029 m367.5005 250.3154 L420.0015 280.626 L420.0015 220.0029 Lf0.447486 0 0.394018 0 0.603922 0.847059 0.690196 Xa367.5005 250.3154 m420.0015 220.0029 L367.5005 189.6924 L367.5005 250.3154 Lf0.089357 0.025788 0.173281 0 0.933333 0.941176 0.862745 Xa420.0015 159.3818 m367.5005 189.6924 L420.0015 220.0029 L420.0015 159.3818 Lf0.137911 0.047913 0.195804 0 0.894118 0.909804 0.835294 Xa367.5005 917.165 m315.0005 947.4756 L367.5005 977.7871 L367.5005 917.165 Lf0.094148 0.032258 0.166232 0 0.929412 0.937255 0.866667 Xa367.5005 856.543 m315.0005 886.8545 L367.5005 917.165 L367.5005 856.543 Lf0.120851 0.0159 0.175235 0 0.909804 0.937255 0.862745 Xa367.5005 795.9209 m315.0005 826.2314 L367.5005 856.543 L367.5005 795.9209 Lf0.619226 0 0.627802 0 0.372549 0.8 0.498039 Xa315.0005 826.2314 m367.5005 795.9209 L315.0005 765.6104 L315.0005 826.2314 Lf0.493599 0 0.371954 0 0.556863 0.796078 0.690196 Xa367.5005 735.2988 m315.0005 765.6104 L367.5005 795.9209 L367.5005 735.2988 Lf0.242985 0 0.297551 0 0.803922 0.952941 0.784314 Xa315.0005 765.6104 m367.5005 735.2988 L315.0005 704.9873 L315.0005 765.6104 Lf0.20618 0 0.244541 0 0.839216 0.92549 0.811765 Xa367.5005 674.6768 m315.0005 704.9873 L367.5005 735.2988 L367.5005 674.6768 Lf0.32224 0.128481 0.277501 0 0.733333 0.796078 0.737255 Xa315.0005 704.9873 m367.5005 674.6768 L315.0005 644.3662 L315.0005 704.9873 Lf0.41062 0.193423 0.415747 0 0.654902 0.717647 0.611765 Xa367.5005 614.0547 m315.0005 644.3662 L367.5005 674.6768 L367.5005 614.0547 Lf0.745876 0.479683 0.543236 0.257053 0.258824 0.376471 0.360784 Xa315.0005 644.3662 m367.5005 614.0547 L315.0005 583.7354 L315.0005 644.3662 Lf0.546532 0.310552 0.362371 0.006683 0.517647 0.611765 0.603922 Xa367.5005 553.4248 m315.0005 583.7373 L367.5005 614.0547 L367.5005 553.4248 Lf0.920073 0.84329 0.508659 0.771603 0.043137 0.070588 0.129412 Xa315.0005 583.7354 m367.5005 553.4248 L315.0005 523.1143 L315.0005 583.7354 Lf0.887816 0.575982 0.123873 0.006409 0.027451 0.396078 0.615686 Xa367.5005 492.8037 m315.0005 523.1143 L367.5005 553.4248 L367.5005 492.8037 Lf0.712703 0.099794 0.152468 0 0.203922 0.67451 0.788235 Xa315.0005 523.1143 m367.5005 492.8037 L315.0005 462.4912 L315.0005 523.1143 Lf0.483131 0 0.160983 0 0.52549 0.862745 0.878431 Xa367.5005 432.1807 m315.0005 462.4932 L367.5005 492.8037 L367.5005 432.1807 Lf0.384985 0 0.152468 0 0.639216 0.905882 0.894118 Xa315.0005 462.4912 m367.5005 432.1807 L315.0005 401.8701 L315.0005 462.4912 Lf0.358801 0 0.159396 0 0.67451 0.909804 0.886275 Xa367.5005 371.5596 m315.0005 401.8701 L367.5005 432.1807 L367.5005 371.5596 Lf0.369543 0 0.217472 0 0.670588 0.886275 0.831373 Xa315.0005 401.8701 m367.5005 371.5596 L315.0005 341.2471 L315.0005 401.8701 Lf0.070191 0 0.134157 0 0.94902 0.976471 0.901961 Xa367.5005 310.9365 m315.0005 341.249 L367.5005 371.5596 L367.5005 310.9365 Lf0.045045 0 0.203159 0 0.972549 0.976471 0.85098 Xa315.0005 341.2471 m367.5005 310.9365 L315.0005 280.626 L315.0005 341.2471 Lf105.0005 310.9365 m157.5005 280.626 L105.0005 250.3154 L105.0005 310.9365 Lf0.029511 0 0.120058 0 0.980392 0.980392 0.909804 Xa367.5005 250.3154 m315.0005 280.626 L367.5005 310.9365 L367.5005 250.3154 Lf367.501 68.2373 m315.001 98.5479 L367.501 128.8584 L367.501 68.2373 Lf0.042237 0.008453 0.128176 0 0.968627 0.968627 0.901961 Xa315.0005 280.626 m367.5005 250.3154 L315.0005 220.0029 L315.0005 280.626 Lf0.061891 0.01474 0.145296 0 0.952941 0.956863 0.886275 Xa367.5005 189.6924 m315.0005 220.0049 L367.5005 250.3154 L367.5005 189.6924 Lf0.076783 0.033967 0.160647 0 0.941176 0.941176 0.870588 Xa315.0005 220.0029 m367.5005 189.6924 L315.0005 159.3818 L315.0005 220.0029 Lf0.204318 0.055909 0.182101 0 0.835294 0.882353 0.835294 Xa262.5005 856.543 m315.0005 826.2314 L262.5005 795.9209 L262.5005 856.543 Lf0.406836 0.148653 0.231815 0 0.647059 0.756863 0.752941 Xa315.0005 765.6104 m262.5005 795.9209 L315.0005 826.2314 L315.0005 765.6104 Lf0.336858 0.086213 0.277775 0 0.721569 0.815686 0.74902 Xa262.5005 795.9209 m315.0005 765.6104 L262.5005 735.2988 L262.5005 795.9209 Lf0.520531 0.123232 0.508537 0 0.54902 0.713726 0.556863 Xa315.0005 704.9873 m262.5005 735.2988 L315.0005 765.6104 L315.0005 704.9873 Lf0.310155 0.050507 0.337438 0 0.74902 0.839216 0.717647 Xa262.5005 735.2988 m315.0005 704.9873 L262.5005 674.6768 L262.5005 735.2988 Lf0.474739 0.146273 0.49305 0 0.596078 0.717647 0.564706 Xa315.0005 644.3662 m262.5005 674.6768 L315.0005 704.9873 L315.0005 644.3662 Lf0.536461 0.308782 0.511925 0.028077 0.52549 0.596078 0.498039 Xa262.5005 674.6768 m315.0005 644.3662 L262.5005 614.0547 L262.5005 674.6768 Lf0.390478 0.158053 0.80914 0 0.690196 0.717647 0.298039 Xa315.0005 583.7354 m262.5005 614.0537 L315.0005 644.3662 L315.0005 583.7354 Lf0.649409 0.419104 1 0.28571 0.345098 0.396078 0.129412 Xa262.5005 614.0547 m315.0005 583.7354 L262.5005 553.4248 L262.5005 614.0547 Lf0.300908 0.033478 0.611231 0 0.772549 0.831373 0.498039 Xa315.0005 523.1143 m262.5005 553.4248 L315.0005 583.7354 L315.0005 523.1143 Lf0.815061 0.289036 0.458534 0.036286 0.105882 0.529412 0.52549 Xa262.5005 553.4248 m315.0005 523.1143 L262.5005 492.8037 L262.5005 553.4248 Lf0.605066 0 0.288151 0 0.384314 0.772549 0.752941 Xa315.0005 462.4912 m262.5005 492.8037 L315.0005 523.1143 L315.0005 462.4912 Lf0.51043 0 0.171572 0 0.486275 0.854902 0.870588 Xa262.5005 492.8037 m315.0005 462.4912 L262.5005 432.1807 L262.5005 492.8037 Lf0.501274 0 0.171237 0 0.498039 0.862745 0.87451 Xa315.0005 401.8701 m262.5005 432.1807 L315.0005 462.4912 L315.0005 401.8701 Lf0.336126 0 0.161349 0 0.698039 0.917647 0.886275 Xa262.5005 432.1807 m315.0005 401.8701 L262.5005 371.5596 L262.5005 432.1807 Lf0.477485 0 0.180514 0 0.541176 0.85098 0.854902 Xa315.0005 341.2471 m262.5005 371.5596 L315.0005 401.8701 L315.0005 341.2471 Lf0.043397 0.00119 0.130129 0 0.968627 0.972549 0.901961 Xa315.0005 220.0029 m262.5005 250.3154 L315.0005 280.626 L315.0005 220.0029 Lf0.062196 0.014069 0.151034 0 0.952941 0.956863 0.882353 Xa262.5005 250.3154 m315.0005 220.0029 L262.5005 189.6924 L262.5005 250.3154 Lf0.076661 0.026246 0.157412 0 0.941176 0.945098 0.87451 Xa315.0005 159.3818 m262.5005 189.6924 L315.0005 220.0029 L315.0005 159.3818 Lf0.07602 0.020294 0.142184 0 0.941176 0.94902 0.886275 Xa262.5005 795.9209 m210.0005 826.2314 L262.5005 856.543 L262.5005 795.9209 Lf0.066957 0.012909 0.134401 0 0.94902 0.956863 0.894118 Xa210.0005 826.2314 m262.5005 795.9209 L210.0005 765.6104 L210.0005 826.2314 Lf0.202548 0.050996 0.239902 0 0.839216 0.882353 0.796078 Xa262.5005 735.2988 m210.0005 765.6104 L262.5005 795.9209 L262.5005 735.2988 Lf0.62121 0.199649 0.57528 0.007691 0.439216 0.631373 0.482353 Xa210.0005 765.6104 m262.5005 735.2988 L210.0005 704.9873 L210.0005 765.6104 Lf0.59353 0.176516 0.564691 0.002808 0.470588 0.654902 0.498039 Xa262.5005 674.6768 m210.0005 704.9873 L262.5005 735.2988 L262.5005 674.6768 Lf0.475135 0.134524 0.707424 0 0.607843 0.709804 0.4 Xa210.0005 704.9873 m262.5005 674.6768 L210.0005 644.3662 L210.0005 704.9873 Lf0.314794 0.041932 0.727565 0 0.764706 0.811765 0.384314 Xa262.5005 614.0547 m210.0005 644.3662 L262.5005 674.6768 L262.5005 614.0547 Lf0.329503 0.066224 0.866087 0 0.752941 0.784314 0.235294 Xa210.0005 644.3662 m262.5005 614.0547 L210.0005 583.7354 L210.0005 644.3662 Lf0.150698 0.014252 0.396796 0 0.894118 0.909804 0.690196 Xa104.9995 704.9941 m52.4995 674.6826 L104.9995 644.3706 L104.9995 704.9941 Lf0.281498 0.03357 0.797208 0 0.796078 0.823529 0.313726 Xa262.5005 553.4248 m210.0005 583.7373 L262.5005 614.0547 L262.5005 553.4248 Lf0.206027 0 0.640009 0 0.858824 0.882353 0.462745 Xa210.0005 583.7354 m262.5005 553.4248 L210.0005 523.1143 L210.0005 583.7354 Lf0 583.7344 m52.5 553.4238 L0 523.1133 L0 583.7344 Lf0.176394 0 0.304326 0 0.870588 0.917647 0.764706 Xa262.5005 492.8037 m210.0005 523.1143 L262.5005 553.4248 L262.5005 492.8037 Lf0.378271 0 0.313909 0 0.67451 0.866667 0.752941 Xa210.0005 523.1143 m262.5005 492.8037 L210.0005 462.4912 L210.0005 523.1143 Lf0.460822 0 0.166293 0 0.560784 0.858824 0.866667 Xa262.5005 432.1807 m210.0005 462.4932 L262.5005 492.8037 L262.5005 432.1807 Lf0.554284 0 0.169436 0 0.419608 0.835294 0.866667 Xa210.0005 462.4912 m262.5005 432.1807 L210.0005 401.8701 L210.0005 462.4912 Lf0.551904 0 0.164096 0 0.447059 0.803922 0.847059 Xa262.5005 371.5596 m210.0005 401.8701 L262.5005 432.1807 L262.5005 371.5596 Lf0.373327 0 0.150423 0 0.670588 0.866667 0.866667 Xa210.0005 401.8701 m262.5005 371.5596 L210.0005 341.2471 L210.0005 401.8701 Lf0.021698 0 0.111604 0 0.988235 0.992157 0.917647 Xa262.5005 310.9365 m210.0005 341.249 L262.5005 371.5596 L262.5005 310.9365 Lf0.061585 0.015381 0.139376 0 0.952941 0.956863 0.890196 Xa210.0005 704.9873 m157.5005 735.2988 L210.0005 765.6104 L210.0005 704.9873 Lf0.214267 0.038697 0.274022 0 0.831373 0.882353 0.772549 Xa157.5005 735.2988 m210.0005 704.9873 L157.5005 674.6768 L157.5005 735.2988 Lf0.052491 0.008392 0.132418 0 0.960784 0.964706 0.898039 Xa210.0005 644.3662 m157.5005 674.6768 L210.0005 704.9873 L210.0005 644.3662 Lf0.150698 0.014252 0.396796 0 0.894118 0.909804 0.690196 Xa157.5005 674.6768 m210.0005 644.3662 L157.5005 614.0547 L157.5005 674.6768 Lf0.21326 0.016358 0.584832 0 0.847059 0.870588 0.517647 Xa210.0005 583.7354 m157.5005 614.0537 L210.0005 644.3662 L210.0005 583.7354 Lf0.281102 0.024598 0.752285 0 0.796078 0.831373 0.360784 Xa157.5005 614.0547 m210.0005 583.7354 L157.5005 553.4248 L157.5005 614.0547 Lf0.204532 0.024994 0.459602 0 0.847059 0.878431 0.631373 Xa210.0005 523.1143 m157.5005 553.4248 L210.0005 583.7354 L210.0005 523.1143 Lf0.241367 0.056794 0.322576 0 0.807843 0.858824 0.729412 Xa157.5005 553.4248 m210.0005 523.1143 L157.5005 492.8037 L157.5005 553.4248 Lf0.441688 0.114626 0.321996 0 0.615686 0.756863 0.698039 Xa210.0005 462.4912 m157.5005 492.8037 L210.0005 523.1143 L210.0005 462.4912 Lf0.42005 0.043153 0.19913 0 0.631373 0.811765 0.807843 Xa102.9995 341.2471 m50.4995 371.5596 L102.9995 401.8701 L102.9995 341.2471 Lf157.5005 492.8037 m210.0005 462.4912 L157.5005 432.1807 L157.5005 492.8037 Lf0.09836 0.010559 0.140078 0 0.92549 0.94902 0.890196 Xa210.0005 401.8701 m157.5005 432.1807 L210.0005 462.4912 L210.0005 401.8701 Lf0.053651 0 0.115938 0 0.960784 0.972549 0.913725 Xa157.5005 432.1807 m210.0005 401.8701 L157.5005 371.5596 L157.5005 432.1807 Lf0.051423 0.01529 0.13489 0 0.960784 0.960784 0.894118 Xa157.5005 674.6768 m105.0005 704.9873 L157.5005 735.2988 L157.5005 674.6768 Lf0.048188 0.004211 0.134768 0 0.964706 0.968627 0.898039 Xa105.0005 644.3662 m157.5005 614.0547 L105.0005 583.7354 L105.0005 644.3662 Lf0.494667 0.248783 0.400519 0.001251 0.572549 0.662745 0.603922 Xa157.5005 492.8037 m105.0005 523.1143 L157.5005 553.4248 L157.5005 492.8037 Lf0.593927 0.322271 0.447761 0.027588 0.462745 0.576471 0.533333 Xa105.0005 523.1143 m157.5005 492.8037 L105.0005 462.4912 L105.0005 523.1143 Lf0.589288 0.291112 0.407752 0.01117 0.466667 0.603922 0.576471 Xa157.5005 432.1807 m105.0005 462.4932 L157.5005 492.8037 L157.5005 432.1807 LfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF